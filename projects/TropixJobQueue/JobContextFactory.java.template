package @PACKAGE@.service;

import java.rmi.RemoteException;

class JobContextFactory {

  public static @REFRENCE_TYPE@ createJob() throws RemoteException {
    org.apache.axis.message.addressing.EndpointReferenceType epr = new org.apache.axis.message.addressing.EndpointReferenceType();
    @RESOURCE_HOME_TYPE@ home = null;
    org.globus.wsrf.ResourceKey resourceKey = null;
    org.apache.axis.MessageContext ctx = org.apache.axis.MessageContext.getCurrentContext();
    String servicePath = ctx.getTargetService();
    String homeName = org.globus.wsrf.Constants.JNDI_SERVICES_BASE_NAME + servicePath + "/" + "@PATH@Home";

    try {
      javax.naming.Context initialContext = new javax.naming.InitialContext();
      home = (@RESOURCE_HOME_TYPE@) initialContext.lookup(homeName);
      resourceKey = home.createResource();

      //  Grab the newly created resource
      @RESOURCE_TYPE@ thisResource = (@RESOURCE_TYPE@)home.find(resourceKey);

      //  This is where the creator of this resource type can set whatever needs
      //  to be set on the resource so that it can function appropriatly  for instance
      //  if you want the resouce to only have the query string then there is where you would
      //  give it the query string.

      // sample of setting creator only security.  This will only allow the caller that created
      // this resource to be able to use it.
      //thisResource.setSecurityDescriptor(gov.nih.nci.cagrid.introduce.servicetools.security.SecurityUtils.createCreatorOnlyResourceSecurityDescriptor());

      String transportURL = (String) ctx.getProperty(org.apache.axis.MessageContext.TRANS_URL);
      transportURL = transportURL.substring(0,transportURL.lastIndexOf('/') +1 );
      transportURL += "@SERVICE_NAME@JobContext";
      epr = org.globus.wsrf.utils.AddressingUtils.createEndpointReference(transportURL,resourceKey);
    } catch (Exception e) {
      throw new RemoteException("Error looking up @SERVICE_NAME@JobContext home:" + e.getMessage(), e);
    }

    //return the typed EPR
    @REFRENCE_TYPE@ ref = new @REFRENCE_TYPE@();
    ref.setEndpointReference(epr);

    return ref;
  }

  public static @REFRENCE_TYPE@ getJob(edu.umn.msi.tropix.common.jobqueue.ticket.Ticket ticket) throws RemoteException {
    org.apache.axis.message.addressing.EndpointReferenceType epr = new org.apache.axis.message.addressing.EndpointReferenceType();
    @RESOURCE_HOME_TYPE@ home = null;
    org.globus.wsrf.ResourceKey resourceKey = null;
    org.apache.axis.MessageContext ctx = org.apache.axis.MessageContext.getCurrentContext();
    String servicePath = ctx.getTargetService();
    String homeName = org.globus.wsrf.Constants.JNDI_SERVICES_BASE_NAME + servicePath + "/" + "@PATH@Home";

    try {
      javax.naming.Context initialContext = new javax.naming.InitialContext();
      home = (@RESOURCE_HOME_TYPE@) initialContext.lookup(homeName);
      resourceKey = home.createResource();

      //  Grab the newly created resource
      @RESOURCE_TYPE@ thisResource = (@RESOURCE_TYPE@)home.find(resourceKey);

      //  This is where the creator of this resource type can set whatever needs
      //  to be set on the resource so that it can function appropriatly  for instance
      //  if you want the resouce to only have the query string then there is where you would
      //  give it the query string.

      // sample of setting creator only security.  This will only allow the caller that created
      // this resource to be able to use it.
      //thisResource.setSecurityDescriptor(gov.nih.nci.cagrid.introduce.servicetools.security.SecurityUtils.createCreatorOnlyResourceSecurityDescriptor());
      thisResource.setTicket(ticket);
      
      String transportURL = (String) ctx.getProperty(org.apache.axis.MessageContext.TRANS_URL);
      transportURL = transportURL.substring(0,transportURL.lastIndexOf('/') +1 );
      transportURL += "@SERVICE_NAME@JobContext";
      epr = org.globus.wsrf.utils.AddressingUtils.createEndpointReference(transportURL,resourceKey);
    } catch (Exception e) {
      throw new RemoteException("Error looking up @SERVICE_NAME@JobContext home:" + e.getMessage(), e);
    }

    //return the typed EPR
    @REFRENCE_TYPE@ ref = new @REFRENCE_TYPE@();
    ref.setEndpointReference(epr);

    return ref;
  }
 

}
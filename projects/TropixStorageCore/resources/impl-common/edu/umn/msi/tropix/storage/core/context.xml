<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

  <bean id="tropixConfigDir" class="edu.umn.msi.tropix.common.spring.TropixConfigDirPropertyPlaceholderConfigurer" />

  <bean id="storageConfigDir" class="edu.umn.msi.tropix.common.spring.ConfigDir">
    <constructor-arg value="storage" />
  </bean>

  <bean class="edu.umn.msi.tropix.common.spring.DeployPropertiesPlaceholderConfigurer">
    <constructor-arg value="storage" />
  </bean>
  
  <bean class="edu.umn.msi.tropix.common.spring.MapPropertyPlaceholderConfigurer">
    <property name="properties">
      <map>
        <entry key="storage.candelete.ids" value="" />
        <entry key="storage.canread.ids" value="" />
        <entry key="storage.canwrite.ids" value="" />
        <entry key="storage.committing.caller.ids" value="" />
        <entry key="storage.backend" value="fs" />
      </map>
    </property>
  </bean>

  <!-- Import persistent file mapper service. -->
  <import resource="databaseContext.xml" />
  
  <!-- Access Implementations -->
  <import resource="access/fs/context.xml" />
  <import resource="access/gridfs/context.xml" />
    
  <!-- Import persistence layer. -->
  <import resource="classpath:edu/umn/msi/tropix/persistence/service/impl/applicationContext.xml" />
  
  <bean id="fileServiceAuthorizationProvider" class="edu.umn.msi.tropix.storage.core.authorization.impl.FileServiceAuthorizationProviderImpl">
    <property name="fileService" ref="fileService" />
  </bean>
  
  <bean id="committingCallerIds" class="edu.umn.msi.tropix.common.collect.spring.JmxStringIterable" scope="singleton">
  	<property name="contents" value="${storage.committing.caller.ids}" />
  </bean>
  
  <bean id="canDeleteIds" class="edu.umn.msi.tropix.common.collect.spring.JmxStringIterable" scope="singleton">
    <property name="contents" value="${storage.candelete.ids}" />
  </bean>
  
  <bean id="canWriteIds" class="edu.umn.msi.tropix.common.collect.spring.JmxStringIterable" scope="singleton">
    <property name="contents" value="${storage.canwrite.ids}" />
  </bean>
  
  <bean id="canReadIds" class="edu.umn.msi.tropix.common.collect.spring.JmxStringIterable" scope="singleton">
    <property name="contents" value="${storage.canread.ids}" />
  </bean>
    
  <bean id="hostAuthorizationProvider" class="edu.umn.msi.tropix.storage.core.authorization.impl.IterableAuthorizationProviderImpl">
    <property name="canReadIds" ref="canReadIds" />  
    <property name="canWriteIds" ref="canWriteIds" />  
    <property name="canDeleteIds" ref="canDeleteIds" />  
  </bean>
  
  <bean id="authorizationProvider" class="edu.umn.msi.tropix.storage.core.authorization.impl.CascadingAuthorizationProviderImpl">
    <property name="authorizationProviders">
      <list>
        <ref bean="hostAuthorizationProvider" />
        <ref bean="fileServiceAuthorizationProvider" />
      </list>
    </property>
  </bean>
  
  <bean id="storageIdSupplier" class="edu.umn.msi.tropix.common.spring.CascadingPropertySupplierImpl">
    <constructor-arg value="${storage.directory}" />
    <constructor-arg value="${tropix.storage.config.dir}/files" />
  </bean> 
  
  <bean id="storageManager" class="edu.umn.msi.tropix.storage.core.impl.StorageManagerImpl">
    <property name="accessProvider" ref="${storage.backend}AccessProvider" />
    <property name="authorizationProvider" ref="authorizationProvider" />
    <property name="fileService" ref="fileService" />
    <property name="committingCallerIds" ref="committingCallerIds" />
  </bean>

</beans>
  

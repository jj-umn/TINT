create table ANALYSIS (OBJECT_ID varchar(255) not null, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE ANALYSIS ENGINE = INNODB;
create table BOWTIE_ANALYSIS (ANALYSIS_ID varchar(255) not null, OUTPUT_FILE_ID varchar(255) unique, BOWTIE_INDEX_ID varchar(255), primary key (ANALYSIS_ID)); 
${if_mysql} ALTER TABLE BOWTIE_ANALYSIS ENGINE = INNODB;
create table BOWTIE_INDEX (OBJECT_ID varchar(255) not null, INDEXES_FILE_ID varchar(255) unique, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE BOWTIE_INDEX ENGINE = INNODB;
create table DATABASE_TABLE (OBJECT_ID varchar(255) not null, TYPE varchar(255), FILE_ID varchar(255) unique, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE DATABASE_TABLE ENGINE = INNODB;
create table DIRECT_PERMISSION (PERMISSION_ID varchar(255) not null, primary key (PERMISSION_ID)); 
${if_mysql} ALTER TABLE DIRECT_PERMISSION ENGINE = INNODB;
create table FILE (OBJECT_ID varchar(255) not null, STORAGE_SERVICE_URL varchar(255), FILE_ID varchar(255), FILE_TYPE_ID varchar(255), primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE FILE ENGINE = INNODB;
create table FILE_TYPE (ID varchar(255) not null, SHORT_NAME varchar(255), EXTENSION varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE FILE_TYPE ENGINE = INNODB;
create table FOLDER (OBJECT_ID varchar(255) not null, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE FOLDER ENGINE = INNODB;
create table GALAXY_TOOL (ID varchar(255) not null, NAME varchar(255), DESCRIPTION varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE GALAXY_TOOL ENGINE = INNODB;
create table GALAXY_TOOL_REVISION (ID varchar(255) not null, REVISION_NUM bigint, XML longtext, GALAXY_TOOL_ID varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE GALAXY_TOOL_REVISION ENGINE = INNODB;
create table IDENTFICATION_PARAMETERS (PARAMETERS_ID varchar(255) not null, TYPE varchar(255), IDENT_PARAMETERS_ID varchar(255), primary key (PARAMETERS_ID)); 
${if_mysql} ALTER TABLE IDENTFICATION_PARAMETERS ENGINE = INNODB;
create table IDENTIFICATION_ANALYSIS (ANALYSIS_ID varchar(255) not null, IDENTIFICATION_PROGRAM varchar(255), DATABASE_ID varchar(255), PROTEOMICS_RUN_ID varchar(255), OUTPUT_ID varchar(255) unique, PARAMETERS_ID varchar(255), primary key (ANALYSIS_ID)); 
${if_mysql} ALTER TABLE IDENTIFICATION_ANALYSIS ENGINE = INNODB;
create table INTERNAL_REQUEST (REQUEST_ID varchar(255) not null, STORAGE_SERVICE_URL varchar(255), REQUEST_SERVICE_URL varchar(255), DESTINATION_FOLDER_ID varchar(255), primary key (REQUEST_ID)); 
${if_mysql} ALTER TABLE INTERNAL_REQUEST ENGINE = INNODB;
create table ITRAQ_QUANTITATION_ANALYSIS (ANALYSIS_ID varchar(255) not null, TRAINING_ID varchar(255), DATA_REPORT_ID varchar(255) unique, OUTPUT_ID varchar(255) unique, primary key (ANALYSIS_ID)); 
${if_mysql} ALTER TABLE ITRAQ_QUANTITATION_ANALYSIS ENGINE = INNODB;
create table ITRAQ_QUANTITATION_TRAINING (OBJECT_ID varchar(255) not null, REPORT_ID varchar(255) unique, TRAINING_FILE_ID varchar(255) unique, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE ITRAQ_QUANTITATION_TRAINING ENGINE = INNODB;
create table JOIN_BOWTIE_ANALYSIS_DATABASE (BOWTIE_ANALYSIS_ID varchar(255) not null, DATABASE_ID varchar(255) not null, primary key (BOWTIE_ANALYSIS_ID, DATABASE_ID)); 
${if_mysql} ALTER TABLE JOIN_BOWTIE_ANALYSIS_DATABASE ENGINE = INNODB;
create table JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS (SCAFFOLD_ANALYSIS_ID varchar(255) not null, IDENTIFICATION_ANALYSIS_ID varchar(255) not null, primary key (SCAFFOLD_ANALYSIS_ID, IDENTIFICATION_ANALYSIS_ID)); 
${if_mysql} ALTER TABLE JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS ENGINE = INNODB;
create table JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN (ITRAQ_QUANTITATION_TRAINING_ID varchar(255) not null, PROTEOMICS_RUN_ID varchar(255) not null, primary key (ITRAQ_QUANTITATION_TRAINING_ID, PROTEOMICS_RUN_ID)); 
${if_mysql} ALTER TABLE JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN ENGINE = INNODB;
create table JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN (ITRAQ_QUANTITATION_TRAINING_ID varchar(255) not null, PROTEOMICS_RUN_ID varchar(255) not null, primary key (ITRAQ_QUANTITATION_TRAINING_ID, PROTEOMICS_RUN_ID)); 
${if_mysql} ALTER TABLE JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN ENGINE = INNODB;
create table JOIN_PERMISSIONS (CHILD_ID varchar(255) not null, PARENT_ID varchar(255) not null, primary key (CHILD_ID, PARENT_ID)); 
${if_mysql} ALTER TABLE JOIN_PERMISSIONS ENGINE = INNODB;
create table JOIN_PERMISSION_GROUP (PERMISSION_ID varchar(255) not null, GROUP_ID varchar(255) not null, primary key (PERMISSION_ID, GROUP_ID)); 
${if_mysql} ALTER TABLE JOIN_PERMISSION_GROUP ENGINE = INNODB;
create table JOIN_PERMISSION_OBJECT (PERMISSION_ID varchar(255) not null, OBJECT_ID varchar(255) not null, primary key (PERMISSION_ID, OBJECT_ID)); 
${if_mysql} ALTER TABLE JOIN_PERMISSION_OBJECT ENGINE = INNODB;
create table JOIN_PERMISSION_USER (PERMISSION_ID varchar(255) not null, USER_ID varchar(255) not null, primary key (PERMISSION_ID, USER_ID)); 
${if_mysql} ALTER TABLE JOIN_PERMISSION_USER ENGINE = INNODB;
create table JOIN_SAMPLE_SAMPLE (SAMPLE_PARENT_ID varchar(255) not null, SAMPLE_CHILD_ID varchar(255) not null unique, primary key (SAMPLE_PARENT_ID, SAMPLE_CHILD_ID)); 
${if_mysql} ALTER TABLE JOIN_SAMPLE_SAMPLE ENGINE = INNODB;
create table JOIN_STUDY_TROPIX_OBJECT (OBJECT_ID varchar(255) not null, STUDY_ID varchar(255) not null); 
${if_mysql} ALTER TABLE JOIN_STUDY_TROPIX_OBJECT ENGINE = INNODB;
create table JOIN_USER_GROUP (GROUP_ID varchar(255) not null, USER_ID varchar(255) not null, primary key (USER_ID, GROUP_ID)); 
${if_mysql} ALTER TABLE JOIN_USER_GROUP ENGINE = INNODB;
create table JOIN_USER_SHARED_FOLDER (USER_ID varchar(255) not null, VIRTUAL_FOLDER_ID varchar(255) not null, primary key (USER_ID, VIRTUAL_FOLDER_ID)); 
${if_mysql} ALTER TABLE JOIN_USER_SHARED_FOLDER ENGINE = INNODB;
create table JOIN_VIRTUAL_FOLDER_OBJECT (OBJECT_ID varchar(255) not null, VIRTUAl_FOLDER_ID varchar(255) not null, primary key (VIRTUAl_FOLDER_ID, OBJECT_ID)); 
${if_mysql} ALTER TABLE JOIN_VIRTUAL_FOLDER_OBJECT ENGINE = INNODB;
create table LOG_MESSAGES (ID varchar(255) not null, USER_ID varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE LOG_MESSAGES ENGINE = INNODB;
create table NOTE (OBJECT_ID varchar(255) not null, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE NOTE ENGINE = INNODB;
create table NOTE_REVISION (ID varchar(255) not null, CREATION_TIME varchar(255), CONTENTS longtext, REVISION_NUM integer, NOTE_ID varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE NOTE_REVISION ENGINE = INNODB;
create table PARAMETERS (OBJECT_ID varchar(255) not null, USER_ID varchar(255), primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE PARAMETERS ENGINE = INNODB;
create table PERMISSION (ID varchar(255) not null, ROLE varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE PERMISSION ENGINE = INNODB;
create table PHYSICAL_FILE (ID varchar(255) not null, SIZE bigint, HASH varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE PHYSICAL_FILE ENGINE = INNODB;
create table PROTEOMICS_RUN (RUN_ID varchar(255) not null, TISSUE_SAMPLE varchar(255), SOURCE_ID varchar(255) unique, MZXML_ID varchar(255) unique, primary key (RUN_ID)); 
${if_mysql} ALTER TABLE PROTEOMICS_RUN ENGINE = INNODB;
create table PROVIDER (PERMISSION_ID varchar(255) not null, CATALOG_ID varchar(255), primary key (PERMISSION_ID)); 
${if_mysql} ALTER TABLE PROVIDER ENGINE = INNODB;
create table REQUEST (OBJECT_ID varchar(255) not null, EXTERNAL_ID varchar(255), REQUESTOR_ID varchar(255), SERVICE_ID varchar(255), CONTACT longtext, DESTINATION varchar(255), SERVICE_INFO varchar(255), STATE varchar(255), REPORT longtext, PROVIDER_ID varchar(255), primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE REQUEST ENGINE = INNODB;
create table RUN (OBJECT_ID varchar(255) not null, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE RUN ENGINE = INNODB;
create table SAMPLE (OBJECT_ID varchar(255) not null, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE SAMPLE ENGINE = INNODB;
create table SCAFFOLD_ANALYSIS (ANALYSIS_ID varchar(255) not null, OUTPUTS_ID varchar(255) unique, INPUT_ID varchar(255) unique, primary key (ANALYSIS_ID)); 
${if_mysql} ALTER TABLE SCAFFOLD_ANALYSIS ENGINE = INNODB;
create table SEQUEST_PARAMETERS (PARAMETERS_ID varchar(255) not null, ENZYME_NAME varchar(255), ENZYME_LIMIT varchar(255), ENZYME_C_TERM bit, ENZYME_CLEAVE varchar(255), ENZYME_NO_CLEAVE varchar(255), PEPTIDE_MASS_TOLERANCE double precision, PEPTIDE_MASS_UNITS varchar(255), FRAGMENT_MASS_TOLERANCE double precision, MASS_TYPE_FRAGMENT varchar(255), INTERNAL_CLEAVAGE_SITES integer, ADD_G double precision, ADD_S double precision, ADD_P double precision, ADD_V double precision, ADD_T double precision, ADD_C double precision, ADD_L double precision, ADD_I double precision, ADD_X double precision, ADD_N double precision, ADD_O double precision, ADD_B double precision, ADD_D double precision, ADD_Q double precision, ADD_K double precision, ADD_Z double precision, ADD_E double precision, ADD_M double precision, ADD_H double precision, ADD_F double precision, ADD_R double precision, ADD_Y double precision, ADD_W double precision, ADD_C_TERM_PEPTIDE double precision, ADD_N_TERM_PEPTIDE double precision, ADD_C_TERM_PROTEIN double precision, ADD_N_TERM_PROTEIN double precision, DIFF_SEARCH_1_RESIDUE varchar(255), DIFF_SEARCH_2_RESIDUE varchar(255), DIFF_SEARCH_3_RESIDUE varchar(255), DIFF_SEARCH_4_RESIDUE varchar(255), DIFF_SEARCH_5_RESIDUE varchar(255), DIFF_SEARCH_6_RESIDUE varchar(255), DIFF_SEARCH_1_VALUE double precision, DIFF_SEARCH_2_VALUE double precision, DIFF_SEARCH_3_VALUE double precision, DIFF_SEARCH_4_VALUE double precision, DIFF_SEARCH_5_VALUE double precision, DIFF_SEARCH_6_VALUE double precision, NUM_OUTPUT_LINES integer, NUM_DESCRIPTION_LINES integer, NUM_RESULTS integer, SHOW_FRAGMENT_IONS bit, MAX_NUM_DIFFERENTIALS_PER_PEPTIDE integer, NORMALIZE_X_CORR bit, REMOVE_PRECURSOR_PEAK bit, ION_CUTOFF_PERCENTAGE double precision, MATCH_PEAK_COUNT integer, MATCH_PEAK_ALLOWED_ERROR integer, MATCH_PEAK_TOLERANCE double precision, MASS_TYPE_PARENT varchar(255), DIGEST_MASS_RANGE_LOWER double precision, DIGEST_MASS_RANGE_UPPER double precision, PROTEIN_MASS_FILTER_LOWER integer, PROTEIN_MASS_FILTER_UPPER integer, PRINT_DUPLICATE_REFERENCES integer, ION_SERIES_NA bit, ION_SERIES_NB bit, ION_SERIES_A double precision, ION_SERIES_B double precision, ION_SERIES_C double precision, ION_SERIES_D double precision, ION_SERIES_V double precision, ION_SERIES_W double precision, ION_SERIES_X double precision, ION_SERIES_Y double precision, ION_SERIES_Z double precision, DIFF_SEARCH_N double precision, DIFF_SEARCH_C double precision, ION_SERIES_NY bit, SECONDARY_DATABASE_ID varchar(255), NUCLEOTIDE_READING_FRAME integer, PARTIAL_SEQUENCE varchar(255), SEQUENCE_HEADER_FILTER varchar(255), ADD_A double precision, ADD_J double precision, ADD_U double precision, primary key (PARAMETERS_ID)); 
${if_mysql} ALTER TABLE SEQUEST_PARAMETERS ENGINE = INNODB;
create table STUDY (OBJECT_ID varchar(255) not null, PUBLISHED_CITATION varchar(255), primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE STUDY ENGINE = INNODB;
create table TISSUE_SAMPLE (SAMPLE_ID varchar(255) not null, SPECIES varchar(255), TISSUE_TYPE varchar(255), COLLECTION_TIME varchar(255), TISSUE_CONDITION varchar(255), primary key (SAMPLE_ID)); 
${if_mysql} ALTER TABLE TISSUE_SAMPLE ENGINE = INNODB;
create table TROPIX_GROUP (ID varchar(255) not null, NAME varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE TROPIX_GROUP ENGINE = INNODB;
create table TROPIX_OBJECT (ID varchar(255) not null, NAME varchar(255), DESCRIPTION varchar(255), CREATION_TIME varchar(255), COMMITTED bit, DELETED_TIME varchar(255), FOLDER_ID varchar(255), REQUEST_ID varchar(255), primary key (ID)); 
${if_mysql} ALTER TABLE TROPIX_OBJECT ENGINE = INNODB;
create table USER (ID varchar(255) not null, FIRST_NAME varchar(255), LAST_NAME varchar(255), CAGRID_ID varchar(255), EMAIL varchar(255), PHONE varchar(255), HOME_FOLDER_ID varchar(255) unique, primary key (ID)); 
${if_mysql} ALTER TABLE USER ENGINE = INNODB;
create table VIRTUAL_FOLDER (OBJECT_ID varchar(255) not null, ROOT bit, primary key (OBJECT_ID)); 
${if_mysql} ALTER TABLE VIRTUAL_FOLDER ENGINE = INNODB;
create table VIRTUAL_PERMISSION (PERMISSION_ID varchar(255) not null, ROOT_VIRTUAL_FOLDER_ID varchar(255), primary key (PERMISSION_ID)); 
${if_mysql} ALTER TABLE VIRTUAL_PERMISSION ENGINE = INNODB;
create table X_TANDEM_PARAMETERS (PARAMETERS_ID varchar(255) not null, OUTPUT_HISTOGRAM_COLUMN_WIDTH integer, OUTPUT_HISTOGRAMS bit, OUTPUT_MAXIMUM_VALID_EXPECTATION_VALUE double precision, OUTPUT_ONE_SEQUENCE_PER_COPY bit, OUTPUT_PERFORMANCE bit, OUTPUT_PROTEINS bit, OUTPUT_RESULTS varchar(255), OUTPUT_SORT_RESULTS_BY varchar(255), OUTPUT_SEQUENCES bit, OUTPUT_SPECTRA bit, PROTEIN_CLEAVAGE_C_TERMINAL_MASS_CHANGE double precision, PROTEIN_CLEAVAGE_N_TERMINAL_MASS_CHANGE double precision, PROTEIN_C_TERMINAL_RESIDUE_MODIFICATION_MASS double precision, PROTEIN_N_TERMINAL_RESIDUE_MODIFICATION_MASS double precision, PROTEIN_CLEAVAGE_SEMI bit, PROTEIN_CLEAVAGE_SITE varchar(255), RESIDUE_MODIFICATION_MASS varchar(255), RESIDUE_POTENTIAL_MODIFICATION_MASS varchar(255), RESIDUE_POTENTIAL_MODIFICATION_MOTIF varchar(255), SCORING_A_IONS bit, SCORING_B_IONS bit, SCORING_C_IONS bit, SCORING_X_IONS bit, SCORING_Y_IONS bit, SCORING_Z_IONS bit, SCORING_CYCLIC_PERMUTATION bit, SCORING_INCLUDE_REVERSE bit, SCORING_MAXIMUM_MISSED_CLEAVAGE_SITES integer, SCORING_MINIMUM_ION_COUNT integer, SPECTRUM_CONTRAST_ANGLE double precision, SPECTRUM_DYNAMIC_RANGE double precision, SPECTRUM_FRAGMENT_MASS_ERROR double precision, SPECTRUM_FRAGMENT_MASS_ERROR_UNITS varchar(255), SPECTRUM_FRAGMENT_MASS_TYPE varchar(255), SPECTRUM_MINIMUM_FRAGMENT_M_Z double precision, SPECTRUM_MINIMUM_PEAKS integer, SPECTRUM_MINIMUM_PARENT_M_H double precision, SPECTRUM_NEUTRAL_LOSS_MASS double precision, SPECTRUM_PARENT_MONOISOTOPIC_MASS_ERROR_MINUS double precision, SPECTRUM_PARENT_MONOISOTOPIC_MASS_ERROR_PLUS double precision, SPECTRUM_PARENT_MONOISOTOPIC_MASS_ERROR_UNITS varchar(255), SPECTRUM_PARENT_MONOISOTOPIC_MASS_ISOTOPE_ERROR bit, SPECTRUM_TOTAL_PEAKS integer, SPECTRUM_USE_NEUTRAL_LOSS_WINDOW bit, SPECTRUM_USE_NOISE_SUPPRESSION bit, SPECTRUM_USE_CONTRAST_ANGLE bit, SPECTRUM_NEUTRAL_LOSS_WINDOW double precision, REFINE bit, REFINE_CLEAVAGE_SEMI bit, REFINE_MAXIMUM_EXPECTATION_VALUE double precision, REFINE_MODIFICATION_MASS varchar(255), REFINE_POTENTIAL_MODIFICATION_MASS varchar(255), REFINE_POTENTIAL_MODIFICATION_MOTIF varchar(255), REFINE_POINT_MUTATIONS bit, REFINE_POTENTIAL_N_TERMINUS_MODIFICATIONS varchar(255), REFINE_POTENTIAL_C_TERMINUS_MODIFICATIONS varchar(255), REFINE_SINGLE_AMINO_ACID_POLYMORPHISMS bit, REFINE_SPECTRUM_SYNTHESIS bit, REFINE_UNANTICIPATED_CLEAVAGE bit, REFINE_USE_POTENTIAL_MODIFICATIONS bit, SPECTRUM_MAXIMUM_PARENT_CHARGE integer, primary key (PARAMETERS_ID)); 
${if_mysql} ALTER TABLE X_TANDEM_PARAMETERS ENGINE = INNODB;
--alter table ANALYSIS add index FKF19622DC47DEDD67 (OBJECT_ID);
create index FKF19622DC47DEDD67 on ANALYSIS (OBJECT_ID);
alter table ANALYSIS add constraint FKF19622DC47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);

create index FKB6D1E0754D7B83D9 on BOWTIE_ANALYSIS (ANALYSIS_ID);
alter table BOWTIE_ANALYSIS add constraint FKB6D1E0754D7B83D9 foreign key (ANALYSIS_ID) references ANALYSIS (OBJECT_ID);
create index FKB6D1E07521A3EF2E on BOWTIE_ANALYSIS (BOWTIE_INDEX_ID);
alter table BOWTIE_ANALYSIS add constraint FKB6D1E07521A3EF2E foreign key (BOWTIE_INDEX_ID) references BOWTIE_INDEX (OBJECT_ID);
create index FKB6D1E07513922649 on BOWTIE_ANALYSIS (OUTPUT_FILE_ID);
alter table BOWTIE_ANALYSIS add constraint FKB6D1E07513922649 foreign key (OUTPUT_FILE_ID) references FILE (OBJECT_ID);
create index FK215301B990E0E748 on BOWTIE_INDEX (INDEXES_FILE_ID);
alter table BOWTIE_INDEX add constraint FK215301B990E0E748 foreign key (INDEXES_FILE_ID) references FILE (OBJECT_ID);
create index FK215301B947DEDD67 on BOWTIE_INDEX (OBJECT_ID);
alter table BOWTIE_INDEX add constraint FK215301B947DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK19C35FEA20D5F787 on DATABASE_TABLE (FILE_ID);
alter table DATABASE_TABLE add constraint FK19C35FEA20D5F787 foreign key (FILE_ID) references FILE (OBJECT_ID);
create index FK19C35FEA47DEDD67 on DATABASE_TABLE (OBJECT_ID);
alter table DATABASE_TABLE add constraint FK19C35FEA47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK9A499BE53E934F39 on DIRECT_PERMISSION (PERMISSION_ID);
alter table DIRECT_PERMISSION add constraint FK9A499BE53E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FK20ED7C3ACB6AF2 on FILE (FILE_TYPE_ID);
alter table FILE add constraint FK20ED7C3ACB6AF2 foreign key (FILE_TYPE_ID) references FILE_TYPE (ID);
create index FK20ED7C47DEDD67 on FILE (OBJECT_ID);
alter table FILE add constraint FK20ED7C47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK7BF0106E47DEDD67 on FOLDER (OBJECT_ID);
alter table FOLDER add constraint FK7BF0106E47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK25008FB3A4EE179A on GALAXY_TOOL_REVISION (GALAXY_TOOL_ID);
alter table GALAXY_TOOL_REVISION add constraint FK25008FB3A4EE179A foreign key (GALAXY_TOOL_ID) references GALAXY_TOOL (ID);
create index FKA7FA4DA4B78E1559 on IDENTFICATION_PARAMETERS (PARAMETERS_ID);
alter table IDENTFICATION_PARAMETERS add constraint FKA7FA4DA4B78E1559 foreign key (PARAMETERS_ID) references PARAMETERS (OBJECT_ID);
create index FK7112898DD57A69E2 on IDENTIFICATION_ANALYSIS (OUTPUT_ID);
alter table IDENTIFICATION_ANALYSIS add constraint FK7112898DD57A69E2 foreign key (OUTPUT_ID) references FILE (OBJECT_ID);
create index FK7112898D5069AD20 on IDENTIFICATION_ANALYSIS (PROTEOMICS_RUN_ID);
alter table IDENTIFICATION_ANALYSIS add constraint FK7112898D5069AD20 foreign key (PROTEOMICS_RUN_ID) references PROTEOMICS_RUN (RUN_ID);
create index FK7112898DF7AF0B79 on IDENTIFICATION_ANALYSIS (DATABASE_ID);
alter table IDENTIFICATION_ANALYSIS add constraint FK7112898DF7AF0B79 foreign key (DATABASE_ID) references DATABASE_TABLE (OBJECT_ID);
create index FK7112898D4D7B83D9 on IDENTIFICATION_ANALYSIS (ANALYSIS_ID);
alter table IDENTIFICATION_ANALYSIS add constraint FK7112898D4D7B83D9 foreign key (ANALYSIS_ID) references ANALYSIS (OBJECT_ID);
create index FK7112898D978FD027 on IDENTIFICATION_ANALYSIS (PARAMETERS_ID);
alter table IDENTIFICATION_ANALYSIS add constraint FK7112898D978FD027 foreign key (PARAMETERS_ID) references IDENTFICATION_PARAMETERS (PARAMETERS_ID);
create index FKF1BFCEED4EC1F3DB on INTERNAL_REQUEST (REQUEST_ID);
alter table INTERNAL_REQUEST add constraint FKF1BFCEED4EC1F3DB foreign key (REQUEST_ID) references REQUEST (OBJECT_ID);
create index FKF1BFCEEDBA2AA368 on INTERNAL_REQUEST (DESTINATION_FOLDER_ID);
alter table INTERNAL_REQUEST add constraint FKF1BFCEEDBA2AA368 foreign key (DESTINATION_FOLDER_ID) references FOLDER (OBJECT_ID);
create index FK1AADBACCD57A69E2 on ITRAQ_QUANTITATION_ANALYSIS (OUTPUT_ID);
alter table ITRAQ_QUANTITATION_ANALYSIS add constraint FK1AADBACCD57A69E2 foreign key (OUTPUT_ID) references FILE (OBJECT_ID);
create index FK1AADBACC4F023EB9 on ITRAQ_QUANTITATION_ANALYSIS (TRAINING_ID);
alter table ITRAQ_QUANTITATION_ANALYSIS add constraint FK1AADBACC4F023EB9 foreign key (TRAINING_ID) references ITRAQ_QUANTITATION_TRAINING (OBJECT_ID);
create index FK1AADBACC4D7B83D9 on ITRAQ_QUANTITATION_ANALYSIS (ANALYSIS_ID);
alter table ITRAQ_QUANTITATION_ANALYSIS add constraint FK1AADBACC4D7B83D9 foreign key (ANALYSIS_ID) references ANALYSIS (OBJECT_ID);
create index FK1AADBACC676CBA7A on ITRAQ_QUANTITATION_ANALYSIS (DATA_REPORT_ID);
alter table ITRAQ_QUANTITATION_ANALYSIS add constraint FK1AADBACC676CBA7A foreign key (DATA_REPORT_ID) references FILE (OBJECT_ID);
create index FKA3CD90CA47DEDD67 on ITRAQ_QUANTITATION_TRAINING (OBJECT_ID);
alter table ITRAQ_QUANTITATION_TRAINING add constraint FKA3CD90CA47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FKA3CD90CA4F342D22 on ITRAQ_QUANTITATION_TRAINING (TRAINING_FILE_ID);
alter table ITRAQ_QUANTITATION_TRAINING add constraint FKA3CD90CA4F342D22 foreign key (TRAINING_FILE_ID) references FILE (OBJECT_ID);
create index FKA3CD90CA3EBCDCCF on ITRAQ_QUANTITATION_TRAINING (REPORT_ID);
alter table ITRAQ_QUANTITATION_TRAINING add constraint FKA3CD90CA3EBCDCCF foreign key (REPORT_ID) references FILE (OBJECT_ID);
create index FK236A077AF7AF0B79 on JOIN_BOWTIE_ANALYSIS_DATABASE (DATABASE_ID);
alter table JOIN_BOWTIE_ANALYSIS_DATABASE add constraint FK236A077AF7AF0B79 foreign key (DATABASE_ID) references DATABASE_TABLE (OBJECT_ID);
create index FK236A077A4AB84106 on JOIN_BOWTIE_ANALYSIS_DATABASE (BOWTIE_ANALYSIS_ID);
alter table JOIN_BOWTIE_ANALYSIS_DATABASE add constraint FK236A077A4AB84106 foreign key (BOWTIE_ANALYSIS_ID) references BOWTIE_ANALYSIS (ANALYSIS_ID);
create index FK6393E9FEA48D05D6 on JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS (IDENTIFICATION_ANALYSIS_ID);
alter table JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS add constraint FK6393E9FEA48D05D6 foreign key (IDENTIFICATION_ANALYSIS_ID) references IDENTIFICATION_ANALYSIS (ANALYSIS_ID);
create index FK6393E9FEA1D8C026 on JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS (SCAFFOLD_ANALYSIS_ID);
alter table JOIN_IDENTIFICATION_ANALYSIS_SCAFFOLD_ANALYSIS add constraint FK6393E9FEA1D8C026 foreign key (SCAFFOLD_ANALYSIS_ID) references SCAFFOLD_ANALYSIS (ANALYSIS_ID);
create index FK46D58115069AD20 on JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN (PROTEOMICS_RUN_ID);
alter table JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN add constraint FK46D58115069AD20 foreign key (PROTEOMICS_RUN_ID) references PROTEOMICS_RUN (RUN_ID);
create index FK46D58116A790EAB on JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN (ITRAQ_QUANTITATION_TRAINING_ID);
alter table JOIN_ITRAQ_QUANTITATION_ANALYSIS_PROTEOMICS_RUN add constraint FK46D58116A790EAB foreign key (ITRAQ_QUANTITATION_TRAINING_ID) references ITRAQ_QUANTITATION_ANALYSIS (ANALYSIS_ID);
create index FK65C306535069AD20 on JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN (PROTEOMICS_RUN_ID);
alter table JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN add constraint FK65C306535069AD20 foreign key (PROTEOMICS_RUN_ID) references PROTEOMICS_RUN (RUN_ID);
create index FK65C30653F398E4A9 on JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN (ITRAQ_QUANTITATION_TRAINING_ID);
alter table JOIN_ITRAQ_QUANTITATION_TRAINING_PROTEOMICS_RUN add constraint FK65C30653F398E4A9 foreign key (ITRAQ_QUANTITATION_TRAINING_ID) references ITRAQ_QUANTITATION_TRAINING (OBJECT_ID);
create index FKA1DD4CCF392626A on JOIN_PERMISSIONS (CHILD_ID);
alter table JOIN_PERMISSIONS add constraint FKA1DD4CCF392626A foreign key (CHILD_ID) references TROPIX_OBJECT (ID);
create index FKA1DD4CCF1C0EFC1C on JOIN_PERMISSIONS (PARENT_ID);
alter table JOIN_PERMISSIONS add constraint FKA1DD4CCF1C0EFC1C foreign key (PARENT_ID) references TROPIX_OBJECT (ID);
create index FK2A5682643E934F39 on JOIN_PERMISSION_GROUP (PERMISSION_ID);
alter table JOIN_PERMISSION_GROUP add constraint FK2A5682643E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FK2A5682644CD45A1B on JOIN_PERMISSION_GROUP (GROUP_ID);
alter table JOIN_PERMISSION_GROUP add constraint FK2A5682644CD45A1B foreign key (GROUP_ID) references TROPIX_GROUP (ID);
create index FK2D3C93DA47DEDD67 on JOIN_PERMISSION_OBJECT (OBJECT_ID);
alter table JOIN_PERMISSION_OBJECT add constraint FK2D3C93DA47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK2D3C93DA3E934F39 on JOIN_PERMISSION_OBJECT (PERMISSION_ID);
alter table JOIN_PERMISSION_OBJECT add constraint FK2D3C93DA3E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FKA68D4B263E934F39 on JOIN_PERMISSION_USER (PERMISSION_ID);
alter table JOIN_PERMISSION_USER add constraint FKA68D4B263E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FKA68D4B269DEBD0F9 on JOIN_PERMISSION_USER (USER_ID);
alter table JOIN_PERMISSION_USER add constraint FKA68D4B269DEBD0F9 foreign key (USER_ID) references USER (ID);
create index FKDA76FF8A3180B31C on JOIN_SAMPLE_SAMPLE (SAMPLE_CHILD_ID);
alter table JOIN_SAMPLE_SAMPLE add constraint FKDA76FF8A3180B31C foreign key (SAMPLE_CHILD_ID) references SAMPLE (OBJECT_ID);
create index FKDA76FF8ABEDFB584 on JOIN_SAMPLE_SAMPLE (SAMPLE_PARENT_ID);
alter table JOIN_SAMPLE_SAMPLE add constraint FKDA76FF8ABEDFB584 foreign key (SAMPLE_PARENT_ID) references SAMPLE (OBJECT_ID);
create index FK1BEBBA59F2A9DDB on JOIN_STUDY_TROPIX_OBJECT (STUDY_ID);
alter table JOIN_STUDY_TROPIX_OBJECT add constraint FK1BEBBA59F2A9DDB foreign key (STUDY_ID) references STUDY (OBJECT_ID);
create index FK1BEBBA547DEDD67 on JOIN_STUDY_TROPIX_OBJECT (OBJECT_ID);
alter table JOIN_STUDY_TROPIX_OBJECT add constraint FK1BEBBA547DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FKF6783209DEBD0F9 on JOIN_USER_GROUP (USER_ID);
alter table JOIN_USER_GROUP add constraint FKF6783209DEBD0F9 foreign key (USER_ID) references USER (ID);
create index FKF6783204CD45A1B on JOIN_USER_GROUP (GROUP_ID);
alter table JOIN_USER_GROUP add constraint FKF6783204CD45A1B foreign key (GROUP_ID) references TROPIX_GROUP (ID);
create index FK7BD755499B40ED72 on JOIN_USER_SHARED_FOLDER (VIRTUAL_FOLDER_ID);
alter table JOIN_USER_SHARED_FOLDER add constraint FK7BD755499B40ED72 foreign key (VIRTUAL_FOLDER_ID) references VIRTUAL_FOLDER (OBJECT_ID);
create index FK7BD755499DEBD0F9 on JOIN_USER_SHARED_FOLDER (USER_ID);
alter table JOIN_USER_SHARED_FOLDER add constraint FK7BD755499DEBD0F9 foreign key (USER_ID) references USER (ID);
create index FK466CC879B40ED72 on JOIN_VIRTUAL_FOLDER_OBJECT (VIRTUAl_FOLDER_ID);
alter table JOIN_VIRTUAL_FOLDER_OBJECT add constraint FK466CC879B40ED72 foreign key (VIRTUAl_FOLDER_ID) references VIRTUAL_FOLDER (OBJECT_ID);
create index FK466CC8747DEDD67 on JOIN_VIRTUAL_FOLDER_OBJECT (OBJECT_ID);
alter table JOIN_VIRTUAL_FOLDER_OBJECT add constraint FK466CC8747DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK142EC4079DEBD0F9 on LOG_MESSAGES (USER_ID);
alter table LOG_MESSAGES add constraint FK142EC4079DEBD0F9 foreign key (USER_ID) references USER (ID);
create index FK24A7F247DEDD67 on NOTE (OBJECT_ID);
alter table NOTE add constraint FK24A7F247DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FKE314018825970B99 on NOTE_REVISION (NOTE_ID);
alter table NOTE_REVISION add constraint FKE314018825970B99 foreign key (NOTE_ID) references NOTE (OBJECT_ID);
create index FK3841ADEA47DEDD67 on PARAMETERS (OBJECT_ID);
alter table PARAMETERS add constraint FK3841ADEA47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK3841ADEA9DEBD0F9 on PARAMETERS (USER_ID);
alter table PARAMETERS add constraint FK3841ADEA9DEBD0F9 foreign key (USER_ID) references USER (ID);
create index FK9A81A809EE908C88 on PROTEOMICS_RUN (SOURCE_ID);
alter table PROTEOMICS_RUN add constraint FK9A81A809EE908C88 foreign key (SOURCE_ID) references FILE (OBJECT_ID);
create index FK9A81A809F01A6152 on PROTEOMICS_RUN (TISSUE_SAMPLE);
alter table PROTEOMICS_RUN add constraint FK9A81A809F01A6152 foreign key (TISSUE_SAMPLE) references TISSUE_SAMPLE (SAMPLE_ID);
create index FK9A81A809198ADB on PROTEOMICS_RUN (RUN_ID);
alter table PROTEOMICS_RUN add constraint FK9A81A809198ADB foreign key (RUN_ID) references RUN (OBJECT_ID);
create index FK9A81A809975CAAF9 on PROTEOMICS_RUN (MZXML_ID);
alter table PROTEOMICS_RUN add constraint FK9A81A809975CAAF9 foreign key (MZXML_ID) references FILE (OBJECT_ID);
create index FKF3C9F5F13E934F39 on PROVIDER (PERMISSION_ID);
alter table PROVIDER add constraint FKF3C9F5F13E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FK6C1A7E6F9C902FB9 on REQUEST (PROVIDER_ID);
alter table REQUEST add constraint FK6C1A7E6F9C902FB9 foreign key (PROVIDER_ID) references PROVIDER (PERMISSION_ID);
create index FK6C1A7E6F47DEDD67 on REQUEST (OBJECT_ID);
alter table REQUEST add constraint FK6C1A7E6F47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK13E6B47DEDD67 on RUN (OBJECT_ID);
alter table RUN add constraint FK13E6B47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK915A69AA47DEDD67 on SAMPLE (OBJECT_ID);
alter table SAMPLE add constraint FK915A69AA47DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK69A369054D7B83D9 on SCAFFOLD_ANALYSIS (ANALYSIS_ID);
alter table SCAFFOLD_ANALYSIS add constraint FK69A369054D7B83D9 foreign key (ANALYSIS_ID) references ANALYSIS (OBJECT_ID);
create index FK69A369057ECA5B1 on SCAFFOLD_ANALYSIS (OUTPUTS_ID);
alter table SCAFFOLD_ANALYSIS add constraint FK69A369057ECA5B1 foreign key (OUTPUTS_ID) references FILE (OBJECT_ID);
create index FK69A369056FDACA79 on SCAFFOLD_ANALYSIS (INPUT_ID);
alter table SCAFFOLD_ANALYSIS add constraint FK69A369056FDACA79 foreign key (INPUT_ID) references FILE (OBJECT_ID);
create index FK4B915A947DEDD67 on STUDY (OBJECT_ID);
alter table STUDY add constraint FK4B915A947DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FK5BD04644FBF744D9 on TISSUE_SAMPLE (SAMPLE_ID);
alter table TISSUE_SAMPLE add constraint FK5BD04644FBF744D9 foreign key (SAMPLE_ID) references SAMPLE (OBJECT_ID);
create index FK2C5A46504EC1F3DB on TROPIX_OBJECT (REQUEST_ID);
alter table TROPIX_OBJECT add constraint FK2C5A46504EC1F3DB foreign key (REQUEST_ID) references REQUEST (OBJECT_ID);
create index FK2C5A4650C3A69E59 on TROPIX_OBJECT (FOLDER_ID);
alter table TROPIX_OBJECT add constraint FK2C5A4650C3A69E59 foreign key (FOLDER_ID) references FOLDER (OBJECT_ID);
create index FK27E3CB9CAF42F9 on USER (HOME_FOLDER_ID);
alter table USER add constraint FK27E3CB9CAF42F9 foreign key (HOME_FOLDER_ID) references FOLDER (OBJECT_ID);
create index FKEBCC544247DEDD67 on VIRTUAL_FOLDER (OBJECT_ID);
alter table VIRTUAL_FOLDER add constraint FKEBCC544247DEDD67 foreign key (OBJECT_ID) references TROPIX_OBJECT (ID);
create index FKDBBDEBA33E934F39 on VIRTUAL_PERMISSION (PERMISSION_ID);
alter table VIRTUAL_PERMISSION add constraint FKDBBDEBA33E934F39 foreign key (PERMISSION_ID) references PERMISSION (ID);
create index FKDBBDEBA38BA3A355 on VIRTUAL_PERMISSION (ROOT_VIRTUAL_FOLDER_ID);
alter table VIRTUAL_PERMISSION add constraint FKDBBDEBA38BA3A355 foreign key (ROOT_VIRTUAL_FOLDER_ID) references VIRTUAL_FOLDER (OBJECT_ID);
